# MIB Platform - Next.js Frontend Dockerfile
# Multi-stage build for production optimization

# Stage 1: Dependencies
FROM node:18-alpine AS deps

LABEL maintainer="UltraThink Team <ultrathink@mib-platform.com>"
LABEL description="MIB Platform Next.js Frontend - Dependencies"

# 安装libc6-compat以提高兼容性
RUN apk add --no-cache libc6-compat

WORKDIR /app

# 复制package文件
COPY package.json pnpm-lock.yaml* ./

# 安装pnpm
RUN corepack enable pnpm

# 安装依赖
RUN pnpm install --frozen-lockfile

# Stage 2: Builder
FROM node:18-alpine AS builder

LABEL description="MIB Platform Next.js Frontend - Build Stage"

WORKDIR /app

# 从deps阶段复制node_modules
COPY --from=deps /app/node_modules ./node_modules

# 复制应用代码
COPY . .

# 构建应用
ENV NEXT_TELEMETRY_DISABLED 1
RUN npm run build

# Stage 3: Runtime
FROM node:18-alpine AS runner

LABEL maintainer="UltraThink Team <ultrathink@mib-platform.com>"
LABEL description="MIB Platform Next.js Frontend - Production"
LABEL version="1.0.0"

WORKDIR /app

# 安装运行时依赖
RUN apk add --no-cache \
    ca-certificates \
    tzdata \
    curl \
    && update-ca-certificates

# 创建应用用户
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# 复制构建产物
COPY --from=builder /app/public ./public

# 复制独立构建文件
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

# 切换到应用用户
USER nextjs

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/api/health || exit 1

# 暴露端口
EXPOSE 3000

# 设置环境变量
ENV PORT 3000
ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1
ENV TZ=Asia/Shanghai

# 启动命令
CMD ["node", "server.js"]